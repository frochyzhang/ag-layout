package server

import (
	"bytes"
	"fmt"
	"html/template"
	"time"
)

// Module is a fx server definition
type Module struct {
	Packages []string
	Names    []string
}

func (m *Module) execute() ([]byte, error) {
	buf := new(bytes.Buffer)
	prefix := fmt.Sprintln("", "// Code generated by protoc-gen-go-http. DO NOT EDIT.")
	prefix = fmt.Sprintln(prefix, "// Code generated by protoc-gen-go-http. DO NOT EDIT.")
	prefix = fmt.Sprintln(prefix, "// Code generated by protoc-gen-go-http. DO NOT EDIT.")

	prefix = fmt.Sprintln(prefix, "// Generate time: ", time.Now().Format("2006-01-02 15:04:05"))

	tmpl, err := template.New("server").Parse(prefix + serverTemplate)
	if err != nil {
		return nil, err
	}
	if err := tmpl.Execute(buf, m); err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}

//nolint:lll
var serverTemplate = `
package server

import ({{ range .Packages }}
	"{{.}}"
	{{- end }}
	"go.uber.org/fx"
)

var FxServerModule = fx.Module("fx-server",{{ range .Names }}
	{{.}},
	{{- end }}
)
`
